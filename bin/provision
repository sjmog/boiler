#!/usr/bin/env bash

set -euo pipefail

# Change to the project root directory
cd "$(dirname "${BASH_SOURCE[0]}")/.."

# Load environment variables from .env file if it exists
if [ -f .env ]; then
    export $(grep -v '^#' .env | xargs)
fi

# Function to read values from infrastructure.yml
read_from_infrastructure() {
    local environment="$1"
    local key="$2"
    yq eval ".$environment.$key" infrastructure.yml
}

# Determine the environment
if [ -n "${GITHUB_REF:-}" ]; then
    if [[ "$GITHUB_REF" == "refs/heads/main" ]]; then
        ENVIRONMENT="production"
    elif [[ "$GITHUB_REF" == "refs/heads/staging" ]]; then
        ENVIRONMENT="staging"
    elif [[ "$GITHUB_REF" == refs/pull/* ]]; then
        ENVIRONMENT="preview"
    else
        echo "Unknown GitHub ref: $GITHUB_REF"
        exit 1
    fi
else
    read -p "Enter the environment (preview/staging/production): " ENVIRONMENT
fi

# Create or update terraform.tfvars
cat << EOF > terraform/terraform.tfvars
hetzner_api_key = "${HETZNER_API_KEY}"
cloudflare_api_token = "${CLOUDFLARE_API_TOKEN}"
region = "$(read_from_infrastructure $ENVIRONMENT region)"
server_type = "$(read_from_infrastructure $ENVIRONMENT server_type)"
operating_system = "$(read_from_infrastructure $ENVIRONMENT operating_system)"
web_servers_count = $(read_from_infrastructure $ENVIRONMENT web)
accessories_count = $(read_from_infrastructure $ENVIRONMENT accessories)
domain_name = "$(read_from_infrastructure $ENVIRONMENT domain)"
subdomain = "$(read_from_infrastructure $ENVIRONMENT subdomain)"
EOF

echo "terraform.tfvars created/updated with configuration from infrastructure.yml"

# Generate SSH key
ssh_key_path="$HOME/.ssh/hetzner"
if [ ! -f "$ssh_key_path" ]; then
    echo "Generating SSH key..."
    ssh-keygen -t rsa -b 4096 -f "$ssh_key_path" -N ""
    echo "SSH key generated at $ssh_key_path"
else
    echo "SSH key already exists at $ssh_key_path"
fi

# Update cloudinit/base.yml with user's GitHub username
github_username="${GITHUB_USERNAME:-}"
if [ -z "$github_username" ]; then
    read -p "Enter your GitHub username: " github_username
fi
if [ -n "$github_username" ]; then
    # Use perl instead of sed for better cross-platform compatibility
    perl -i -pe "s/gh:sjmog/gh:$github_username/" terraform/cloudinit/base.yml
    echo "Updated cloudinit/base.yml with your GitHub username for SSH key import."
else
    echo "GitHub username is required. Please set the GITHUB_USERNAME environment variable or enter it when prompted."
    exit 1
fi

# Change to the terraform directory
cd terraform

# Initialize Terraform
echo "Initializing Terraform..."
terraform init

# Run Terraform apply
echo "Running Terraform apply..."
terraform apply